@model FootballWorldWeb.Models.Competitions.SeasonViewViewModel
@inject FootballWorldWeb.Services.StandingsCalculatorService standingsService
<div>
    <div class="row">
        <div class="col-2">
            <div>
                <img src="@LinkHandler.MakeFootballImageLink(Model.Competition.CompetitionLogo,"competitions")" alt="Alternate Text" width="100%" />
            </div>
            <div>
                
            </div>
        </div>
        <div class="col-10">
            <div class="row">
                <div class="col-12">
                    <h2>@ViewData["Title"]</h2>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    @foreach (Group group in Model.Groups
                  .Where(x => x.GroupType == GroupType.Knockout)
                  .OrderByDescending(x => x.Order)
                  .ToList())
                    {
                        if (group.GroupType == GroupType.Knockout)
                        {
                            @await Html.PartialAsync(
                                                "~/Views/Competitions/Partials/_MatchesListViewPartial.cshtml",
                                                group.Matches,
                                                new ViewDataDictionary(ViewData) { { "WidgetTitle", group.Name } }
                                                )
                        }
                    }
                </div>
            </div>
            <div class="row">
                @if (Model.SingleGroup && Model.Groups.Where(x => x.GroupType == GroupType.League).FirstOrDefault() != null)
                {
                    <div class="col">
                        <div class="section-heading">
                            <h3>
                                Standings
                            </h3>
                        </div>
                        @if (Model.Groups.Where(x => x.GroupType == GroupType.League).FirstOrDefault().Standings.Count > 0)
                        {
                        @await Html.PartialAsync(
                                                         "~/Views/Competitions/Partials/_StandingsTablePartial.cshtml",
                                                         Model.Groups.Where(x => x.GroupType == GroupType.League).FirstOrDefault().Standings.FirstOrDefault()
                                                         )

                        }
                    </div>
                }
                else
                {
                    
                        @foreach (Group group in Model.Groups.Where(x => x.GroupType == GroupType.League).ToList())
                        {
                            if (group.GroupType == GroupType.League)
                            {
                                <div class="col col-md-4">
                                    <div class="section-heading small">
                                        <h3>
                                            <a asp-action="Details" asp-controller="Groups"
                                               asp-route-slug="@group.Slug" asp-route-id="@group.Id">@group.Name</a>
                                        </h3>
                                    </div>
                                    @if (group.Standings.Count > 0)
                                    {
                                        @await Html.PartialAsync(
                                       "~/Views/Competitions/Partials/_CompactStandingsTablePartial.cshtml",
                                       group.Standings.FirstOrDefault()
                                       )
                                    }
                                </div>
                            }
                        }
                    }
                </div>
            @if(Model.Lists.Count > 0) {
        <div class="col">
            <div class="section-heading">
                <h3>
                    @Model.Lists.FirstOrDefault().Name
                </h3>
            </div>
            @await Html.PartialAsync(
                                       "~/Views/Competitions/Partials/_TeamsListViewPartial.cshtml",
                                       Model.Lists.FirstOrDefault().GroupTeams.Select(x => x.Team).ToList()
                                       )
        </div>
            }
        </div>
    </div>
    <hr />
    <div>
        <p>
            Current UTC time for reference: @DateTime.UtcNow.ToString()
        </p>
        </div>
</div>